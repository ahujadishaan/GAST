[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode unshaded;

uniform samplerExternalOES gast_texture;
uniform bool curve_flag;
uniform float gast_width;
uniform float gradient_height_ratio;

void vertex() {
	if (curve_flag) {
		float angle = 2.0 * VERTEX.x / gast_width;
		VERTEX.y = -cos(angle) + cos(1.0);
	}
}

void fragment() {
	vec4 texture_color = texture(gast_texture, UV);
	float gradient_mask = min((1.0 - UV.y) / gradient_height_ratio, 1.0);
	ALPHA = COLOR.a * texture_color.a * gradient_mask;
	ALBEDO = texture_color.rgb * ALPHA;
}"
custom_defines = "#ifdef ANDROID_ENABLED
#extension GL_OES_EGL_image_external : enable
#extension GL_OES_EGL_image_external_essl3 : enable
#else
#define samplerExternalOES sampler2D
#endif"

[sub_resource type="ExternalTexture" id=2]

[resource]
shader = SubResource( 1 )
shader_param/gast_texture = SubResource( 2 )
